import numpy as np
import matplotlib.pyplot as plt


def get_kde(x,data_array,bandwidth=0.1):
    def gauss(x):
        import math
        return (1/math.sqrt(2*math.pi))*math.exp(-0.5*(x**2))
    N=len(data_array)
    res=0
    if len(data_array)==0:
        return 0
    for i in range(len(data_array)):
        res += gauss((x-data_array[i])/bandwidth)
    res /= (N*bandwidth)
    return res




if __name__ == '__main__':

    input_array1 = [0.7865853658536586, 0.6126126126126126, 0.603030303030303, 0.5957446808510638, 0.6875,
                   0.7910447761194029, 0.6578947368421053, 0.6896551724137931, 0.6833855799373041, 0.6575342465753424,
                   0.7157894736842105, 0.8308823529411765, 0.6898550724637681, 0.6404494382022472, 0.8478260869565217,
                   0.6132930513595166, 0.673469387755102, 0.5454545454545454, 0.7558139534883721, 0.7585034013605442,
                   0.7321428571428571, 0.6813725490196079, 0.6851851851851852, 0.7272727272727273, 0.6686390532544378,
                   0.4473684210526316, 0.7794117647058824, 0.6291390728476821, 0.44036697247706424, 0.7166666666666667,
                   0.718213058419244, 0.6470588235294118, 0.6, 0.720754716981132, 0.7046153846153846, 0.863013698630137,
                   0.6233766233766234, 1.0, 0.782608695652174, 0.7821782178217822, 0.7019867549668874,
                   0.6276595744680851, 0.6946564885496184, 0.6666666666666666, 0.7540983606557377, 0.75,
                   0.6713286713286714, 0.6666666666666666, 0.7058823529411765, 0.7888888888888889, 0.7272727272727273,
                   0.6756756756756757, 0.6637931034482759, 0.7741935483870968, 0.6893939393939394, 0.7156862745098039,
                   0.6666666666666666, 0.48120300751879697, 0.8421052631578947, 0.8360655737704918, 0.6666666666666666,
                   0.6326530612244898, 0.7457627118644068, 1.0, 0.65625, 0.6226415094339622, 0.47058823529411764, 0.7,
                   0.8214285714285714, 0.7619047619047619, 0.875, 0.64, 0.7636363636363637, 0.6666666666666666,
                   0.8571428571428571, 0.7777777777777778, 0.7, 0.0, 0.8333333333333334, 0.8181818181818182, 0.75, 1.0,
                   0.7142857142857143, 0.7692307692307693, 0.25, 1.0, 0.5, 0.6818181818181818, 0.8, 0.8928571428571429,
                   0.5, 1.0, 0.0, 0.6666666666666666, 0.6666666666666666, 1.0, 0.5714285714285714, 1.0,
                   0.5555555555555556, 0.0, 1.0, 0.6666666666666666, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 1.0, 0.5]


    input_array2 = [0.7865853658536586, 0.6126126126126126, 0.603030303030303, 0.7659574468085106, 0.6875, 0.7910447761194029, 0.6578947368421053, 0.6551724137931034, 0.774294670846395, 0.6164383561643836, 0.7157894736842105, 0.8308823529411765, 0.6898550724637681, 0.5842696629213483, 0.8478260869565217, 0.6132930513595166, 0.673469387755102, 0.5454545454545454, 0.7558139534883721, 0.7585034013605442, 0.7321428571428571, 0.6813725490196079, 0.7592592592592593, 0.7272727272727273, 0.6686390532544378, 0.4473684210526316, 0.8823529411764706, 0.6291390728476821, 0.44036697247706424, 0.7166666666666667, 0.6048109965635738, 0.6470588235294118, 0.6, 0.7773584905660378, 0.6492307692307693, 0.863013698630137, 0.6233766233766234, 1.0, 0.782608695652174, 0.7821782178217822, 0.7019867549668874, 0.6276595744680851, 0.7480916030534351, 0.6666666666666666, 0.7540983606557377, 0.75, 0.8041958041958042, 0.6666666666666666, 0.7058823529411765, 0.7888888888888889, 0.7272727272727273, 0.6756756756756757, 0.6637931034482759, 0.7741935483870968, 0.6893939393939394, 0.6078431372549019, 0.7619047619047619, 0.48120300751879697, 0.8421052631578947, 0.8360655737704918, 0.6666666666666666, 0.6326530612244898, 0.7457627118644068, 1.0, 0.65625, 0.6792452830188679, 0.47058823529411764, 0.7, 0.8214285714285714, 0.6666666666666666, 1.0, 0.64, 0.7636363636363637, 0.6666666666666666, 0.7142857142857143, 0.7777777777777778, 0.7, 0.0, 0.8333333333333334, 0.8181818181818182, 0.75, 1.0, 0.7142857142857143, 0.5384615384615384, 0.25, 1.0, 0.5, 0.6818181818181818, 0.8, 0.8928571428571429, 0.5, 1.0, 0.0, 0.6666666666666666, 0.6666666666666666, 1.0, 0.5714285714285714, 1.0, 0.5555555555555556, 0.0, 0.0, 0.8888888888888888, 1.0, 1.0, 1.0, 1.0, 0.6666666666666666, 1.0, 0.5]



    bandwidth1 = 1.05 * np.std(input_array1) * (len(input_array1) ** (-1 / 5))
    x_array1 = np.linspace(min(input_array1), max(input_array1), 20)
    y_array1 = [get_kde(x_array1[i], input_array1, bandwidth1) for i in range(x_array1.shape[0])]

    plt.figure(1)
    plt.hist(input_array1, bins=20, density=True)
    plt.plot(x_array1.tolist(), y_array1, color='red', linestyle='-')


    bandwidth2 = 1.05 * np.std(input_array2) * (len(input_array2) ** (-1 / 5))
    x_array2 = np.linspace(min(input_array2), max(input_array2), 20)
    y_array2 = [get_kde(x_array2[i], input_array2, bandwidth2) for i in range(x_array2.shape[0])]

    plt.figure(1)
    plt.hist(input_array2, bins=20, density=True)
    plt.plot(x_array2.tolist(), y_array2, color='green', linestyle='-.')








    plt.show()